# Neutron

Neutron to jest gra dla dwóch graczy, na planszy o wymiarach 5 * 5. Każdy gracz ma 5
żołnierzy. Istnieje również neutralna figura, Neutron, która jest grana przez obu graczy.

# Zasady gry
Gra zaczyna się od pięciu pionków na białym domowym rzędu (jedna krawędź planszy), pięć
sztuk czarne na czarnym domowym rzędu i neutronu w centrum. Wszystkie elementy poruszają
się w linii prostej, pionowo, poziomo lub ukośnie, jednak muszą one poruszać się tak daleko, jak
może iść w wybranym kierunku. Mogą poruszać się tylko za pośrednictwem lub na pustych
placach i nie ma przechwytywania ani skoków.
Gra rozpoczyna się, gdy jeden gracz przesuwa pionek ze swojego rzędu. Następnie w każdym
kolejnym ruchu gracz przesuwa najpierw neutron, a następnie jeden ze swoich pionków.

# Cel gry
Dlatego, żeby wygrać gracz musi doprowadzić neutron do swojego rzędu domowego. Rząd
domowy to pierwszy rząd ze strony gracza na polu. Gracz może podczas swojego ruchu
doprowadzić neutron do swojego domowego rzędu lub zmusić do tego swojego przeciwnika.
Innym sposobem na wygraną jest zagiąć swojego przeciwnika. Czyli nie pozwolić
przeciwnikowi przesunąć neutronu i zakończyć ruch.

# Opis działania
Na poczatku gracz powinien wybrać rodzaj gry albo przeczytanie reguł, wprowadzając
odpowiednią liczbę.
Aby móc przesunąć dowolną figurę na planszy, należy wprowadzić współrzędne pozycji
początkowej i docelowej w postaci liczb dla X i Y. Na przykład dla żółtego pionku ze
współrzędnymi wyjściowymi (2, 5) i końcowymi (2, 2) należy wpisać:
From X Y: 2 5
To X Y: 2 2

# Różne rodzaje gier
Na początku rozgrywki jest możliwość wybrać jeden z następujących rodzajów gier:
- człowiek z człowiekiem:
za każdym ruchiem gracz_1 i gracz_2 powinni wprowadzać dane do przesunięcia figur na
żądanie;
- człowiek z komputerem, wersja lekka:
komputer w wersji lekkiej losowo wybiera swój ruch;
- człowiek z komputerem, wersja złożona
komputer w wersji złożonej wybiera swój najlepszy ruch według określonych kryteriów;
- złożony komputer z lekkim komputerem.

# Osobliwości
W przypadku bardziej złożonej wersji gry z komputerem, wprowadzono zmiany: pierwszym,
rozpoczyna grę, komputer złożony, dla bardziej skomplikowanej rozgrywki.
Algorytm wyboru ruchu dla złożonego komputera
Dla ruchu neutrona, jeśli to możliwe, komputer:
- przemieszcza neutron do swojego rzędu domowego – zwycięstwo;
- nie przemieszcza neutronu na rzęd przeciwnika – przegrana;
- przy wyborze punktu końcowego sprawdza możliwość przesunięcia neutronu na rzęd
przeciwnika z tego punktu (przypuszczającego jako możliwy), czyli spawadza możliwość
zwycięstwa przeciwnika w kolejnym ruchu.
Dla ruchu pionka, jeśli to możliwe, komputer:
- przesuwa swojego pionka do rzędu przeciwnika, żeby zamknąć pustą kratkę - aby uniknąć
możliwości umieszczenia neutronu na rzęd domowy dla przeciwnika.

# Architektura projektu
main.py - ten plik jest przyznaczony do uruchamiania programu, zawiera obiekt klasy Game.
class_game.py - ten plik zawiera klasę Game, która kontroluje całą grę, kolejność rozgrywek.
class_board.py - zawiera klasę Board, w której wszystkie ruchy figurek na planszy są
kontrolowane, wykonywane i wyświetlane.
class_pawn.py - zawiera klasę Pawn, w której prezentowane są białe, czarne pionki i neutron;
ogólnie dla każdej figurki na planszy, jest opisany ruch dla niej, ustalają się wszystkie możliwe
ruchy;
class_figure.py - zawiera klasę Figure, która wskazuje na okresloną figurę na planszy - neutron,
biały pionek czy czarny pionek
class_empty.py - zawiera pustą klasę pola, pustą komórkę, która nie jest żetonem gracza, nie ma
możliwych ruchów ani kolorów
errors.py - zawiera klasy do obsługi błędów: NotIntegerError, IncorrectNumberError,
MoveEmptyError;
test_class_board.py, test_class_pawn.py, test_class_empty.py, test_class_figure.py – pliki z
testami jednostkowymi do odpowiednich klas.

# Uruchamianie programu
Dla uruchamiania gry niezbędnym jest:
1) Ściągnięcie tego repozytorium
2) Otworzenie folderu z plikami
3) Wpisanie w terminalu python3 main.py

# Podsumowując
Dzięki bardzo nasyconemu kursu i dużej ilości informacji, ja, jako człowiek, który nigdy
wcześniej w ogóle nie programował, potrafiłam napisać taki projekt.
Dzięki tej grze, można rozwijać pamięć, myślenie logiczne i przestrzenne. Ogólnie, wykonanie
projektu było bardzo ciekawe i korzystne. Na tym etapie wszystkie ustalone mną cele zostały
wykonane. Dodatkowo można byłoby zaimplementować jeszcze GUI za pomocą QT. Ale
ponieważ to nie było głównym celem, całe skupienie zostało skierowane w stronę
zaimplementowania algorytmu, według którego działa program. Następnym krokiem, który chcę
wprowadzić, jest sztuczna inteligencja, żeby rozszerzyć funkcjonalność gry